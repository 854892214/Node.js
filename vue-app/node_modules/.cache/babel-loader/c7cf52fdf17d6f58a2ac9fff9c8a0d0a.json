{"remainingRequest":"c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\src\\components\\GoodList\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\src\\components\\GoodList\\ShopCart.vue","mtime":1552617714021},{"path":"c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//ShopCart.vue 当组件创建成功发送 ajax请求\n//获取购物车列表\nimport { Toast } from \"mint-ui\";\nexport default {\n  data() {\n    return {\n      list: [],\n      //页面初始化数组\n      cb: false,\n      //保存单个商品的复选框状态\n      allcb: false,\n      //保存全选复选框状态\n      isId: true //判断用户是否登录\n\n    };\n  },\n\n  methods: {\n    //删除一项商品\n    delItem(e) {\n      //e事件对象 e.target 触发事件对象button\n      //target.dataset 自定义属性集合\n      //1:获取当前购物车id\n      var id = e.target.dataset.id;\n      var idx = e.target.dataset.idx; //下标\n      //2:发送ajax请求\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"delCartItem?id=\" + id;\n      this.axios.get(url).then(result => {\n        if (result.data.code == 1) {\n          //3:获取返回结果判断是否删除成功\n          Toast(\"删除成功\"); //4:删除list对应购物车商品对象\n          //将数组中对应下标商品删除\n          //splice(数组下标,个数); 10:35\n\n          this.list.splice(idx, 1);\n        }\n      });\n    },\n\n    //页面加载 初始化数据\n    loadMore() {\n      //1:创建变量保存url\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"cartlist?uid=1\"; //2:发送ajax请求\n\n      this.axios.get(url).then(result => {\n        //1:判断如果没有登录显示出错消息\n        if (result.data.code == -1) {\n          Toast(\"请登录\");\n          this.isId = false;\n          return;\n        } //1:2 没有与 vue data双向绑定\n        //1:接收服务器程序返回数据\n        //ShopCart.vue\n\n\n        var rows = result.data.data; //修改全局购物车数量\n\n        this.$store.commit(\"updateCount\", rows.length); //2:为每一个商品对象添加属性cb 选中状态\n\n        for (var item of rows) {\n          item.cb = false;\n        } //3:将最终数组赋值 list 列表\n\n\n        this.list = rows;\n        console.log(this.list);\n      });\n    },\n\n    //点击全选 选中全部商品\n    selectAll(e) {\n      //全选按钮点击事件\n      //1:获取当前全选复选框状态\n      var cb = e.target.checked; //2:修改全选状态\n\n      this.allcb = cb; //2:依据全选状态修改数组中cb值\n\n      for (var item of this.list) {\n        item.cb = cb;\n      }\n    },\n\n    //全选checked判断是否true/false\n    modifyItem(e) {\n      //修改\n      //1:获取当前元素下标[其中一种方式]\n      var idx = e.target.dataset.i; //2:将下标对象数组中元素cb修改当前复选状态\n\n      var checked = e.target.checked; //3:将数组中对应cb状态修改\n\n      this.list[idx].cb = checked; //4:统计购物车中商品选中数量 == list.length\n      //5:将全选状态修改为true否则为 false\n\n      var count = 0;\n\n      for (var item of this.list) {\n        if (item.cb) {\n          count++;\n        }\n      }\n\n      if (count == this.list.length) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n\n    //删除选中的购物车商品\n    removeItem() {\n      //0:创建空字符串，为了后续接拼字符串\n      var html = \"\"; //1:遍历数组中元素\n\n      for (var item of this.list) {\n        //2:判断cb==true\n        if (item.cb) {\n          //3:保存id：拼字符串\n          html += item.id + \",\";\n        }\n      } //3.1:截取字符串  试一下  三 二 一\n\n\n      html = html.substring(0, html.length - 1); //4:发送ajax请求 删除多个商品\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"removeMItem?ids=\" + html;\n      this.axios.get(url).then(result => {\n        if (result.data.code == 1) {\n          Toast(\"删除成功\");\n          this.loadMore();\n        }\n      });\n    },\n\n    // 指定一个方法 计算合计消费的金额\n    calcTocalPrice() {\n      var sum = 0;\n      var row = this.list;\n\n      for (var i = 0; i < row.length; i++) {\n        var p = row[i];\n\n        if (p.cb) {\n          sum += p.price * p.count;\n        }\n      }\n\n      return sum;\n    },\n\n    //点击-按钮，购物商品减1\n    minCount(index) {\n      if (this.list[index].count == 1) {\n        return;\n      }\n\n      this.list[index].count--;\n    },\n\n    //点击+按钮，购物商品加1\n    addCount(index) {\n      this.list[index].count++;\n    },\n\n    //跳转到商品组件\n    jump() {\n      this.$router.push(\"GoodsList\");\n    },\n\n    //跳转到购物车\n    jumpCart() {\n      this.$router.push('OrderConfirm');\n    }\n\n  },\n\n  created() {\n    this.loadMore();\n  }\n\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-cart\">\r\n    <div class=\"mui-card\" v-if=\"isId&&list.length>0\">\r\n      <div class=\"mui-card-header\">\r\n        <h3>购物车列表</h3>\r\n        <h4>\r\n          <!--allcb 全选状态true选中false清空-->\r\n          全选\r\n          <input type=\"checkbox\" @click=\"selectAll\" :checked=\"allcb\">\r\n        </h4>\r\n      </div>\r\n      <div class=\"mui-card-content\">\r\n        <div class=\"mui-card-content-inner\">\r\n          <ul class=\"mui-table-view\">\r\n            <li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) in list\" :key=\"item.id\">\r\n              <a href=\"javascript:;\">\r\n                <img class=\"mui-media-object mui-pull-left\">\r\n                <div class=\"mui-media-body\">\r\n                  <p class=\"mui-ellipsis\">\r\n                    <!-- 购物车中商品项目 home/ShopCart.vue start-->\r\n                    <input type=\"checkbox\" :checked=\"item.cb\" :data-i=\"i\" @click=\"modifyItem\">\r\n                    {{item.lname}}\r\n                    {{item.price}}\r\n                    <!--delItem处理删除商品函数-->\r\n                    <!--data-id 当前购物车id-->\r\n                    <!--data-idx 当前商品下标list-->\r\n                    <button @click=\"delItem\" :data-id=\"item.id\" :data-idx=\"i\">删除</button>\r\n                    <!-- 购物车中商品项目 end-->\r\n                  </p>\r\n                </div>\r\n              </a>\r\n              <form class=\"mui-input-group\">\r\n                <div class=\"mui-input-row\">\r\n                  <div class=\"mui-numbox\">\r\n                    <button\r\n                      class=\"mui-btn mui-btn-numbox-minus\"\r\n                      type=\"button\"\r\n                      @click=\"minCount(i)\"\r\n                    >-</button>\r\n                    <input class=\"mui-input-numbox\" type=\"number\" v-model=\"item.count\">\r\n                    <button class=\"mui-btn mui-btn-numbox-plus\" type=\"button\" @click=\"addCount(i)\">+</button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"mui-card-footer\">\r\n        <button @click=\"removeItem\">删除选中商品</button>\r\n        <p>小计:￥{{calcTocalPrice()}}</p>\r\n      </div>\r\n      <div class=\"mui-card-footer\">\r\n        <button @click=\"jumpCart\">去支付</button>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"isId==false\">\r\n      <p>抱歉，请您先登录吧</p>\r\n    </div>\r\n    <div v-if=\"list.length==0\">\r\n      <h3>购物车是空的，逛逛去吧！</h3>\r\n      <button @click=\"jump\">逛逛</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n//ShopCart.vue 当组件创建成功发送 ajax请求\r\n//获取购物车列表\r\nimport { Toast } from \"mint-ui\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],     //页面初始化数组\r\n      cb: false,    //保存单个商品的复选框状态\r\n      allcb: false, //保存全选复选框状态\r\n      isId: true    //判断用户是否登录\r\n    };\r\n  },\r\n  methods: {\r\n    //删除一项商品\r\n    delItem(e) {\r\n      //e事件对象 e.target 触发事件对象button\r\n      //target.dataset 自定义属性集合\r\n      //1:获取当前购物车id\r\n      var id = e.target.dataset.id;\r\n      var idx = e.target.dataset.idx; //下标\r\n      //2:发送ajax请求\r\n      var url = \"http://127.0.0.1:3000/\";\r\n      url += \"delCartItem?id=\" + id;\r\n      this.axios.get(url).then(result => {\r\n        if (result.data.code == 1) {\r\n          //3:获取返回结果判断是否删除成功\r\n          Toast(\"删除成功\");\r\n          //4:删除list对应购物车商品对象\r\n          //将数组中对应下标商品删除\r\n          //splice(数组下标,个数); 10:35\r\n          this.list.splice(idx, 1);\r\n        }\r\n      });\r\n    },\r\n    //页面加载 初始化数据\r\n    loadMore() {\r\n      //1:创建变量保存url\r\n      var url = \"http://127.0.0.1:3000/\";\r\n      url += \"cartlist?uid=1\";\r\n      //2:发送ajax请求\r\n      this.axios.get(url).then(result => {\r\n        //1:判断如果没有登录显示出错消息\r\n        if (result.data.code == -1) {\r\n          Toast(\"请登录\");\r\n          this.isId = false;\r\n          return;\r\n        }\r\n        //1:2 没有与 vue data双向绑定\r\n        //1:接收服务器程序返回数据\r\n        //ShopCart.vue\r\n        var rows = result.data.data;\r\n        //修改全局购物车数量\r\n        this.$store.commit(\"updateCount\", rows.length);\r\n        //2:为每一个商品对象添加属性cb 选中状态\r\n        for (var item of rows) {\r\n          item.cb = false;\r\n        }\r\n        //3:将最终数组赋值 list 列表\r\n        this.list = rows;\r\n        console.log(this.list);\r\n      });\r\n    },\r\n    //点击全选 选中全部商品\r\n    selectAll(e) {\r\n      //全选按钮点击事件\r\n      //1:获取当前全选复选框状态\r\n      var cb = e.target.checked;\r\n      //2:修改全选状态\r\n      this.allcb = cb;\r\n      //2:依据全选状态修改数组中cb值\r\n      for (var item of this.list) {\r\n        item.cb = cb;\r\n      }\r\n    },\r\n    //全选checked判断是否true/false\r\n    modifyItem(e) {\r\n      //修改\r\n      //1:获取当前元素下标[其中一种方式]\r\n      var idx = e.target.dataset.i;\r\n      //2:将下标对象数组中元素cb修改当前复选状态\r\n      var checked = e.target.checked;\r\n      //3:将数组中对应cb状态修改\r\n      this.list[idx].cb = checked;\r\n      //4:统计购物车中商品选中数量 == list.length\r\n      //5:将全选状态修改为true否则为 false\r\n      var count = 0;\r\n      for (var item of this.list) {\r\n        if (item.cb) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count == this.list.length) {\r\n        this.allcb = true;\r\n      } else {\r\n        this.allcb = false;\r\n      }\r\n    },\r\n    //删除选中的购物车商品\r\n    removeItem() {\r\n      //0:创建空字符串，为了后续接拼字符串\r\n      var html = \"\";\r\n      //1:遍历数组中元素\r\n      for (var item of this.list) {\r\n        //2:判断cb==true\r\n        if (item.cb) {\r\n          //3:保存id：拼字符串\r\n          html += item.id + \",\";\r\n        }\r\n      }\r\n      //3.1:截取字符串  试一下  三 二 一\r\n      html = html.substring(0, html.length - 1);\r\n      //4:发送ajax请求 删除多个商品\r\n      var url = \"http://127.0.0.1:3000/\";\r\n      url += \"removeMItem?ids=\" + html;\r\n      this.axios.get(url).then(result => {\r\n        if (result.data.code == 1) {\r\n          Toast(\"删除成功\");\r\n          this.loadMore();\r\n        }\r\n      });\r\n    },\r\n    // 指定一个方法 计算合计消费的金额\r\n    calcTocalPrice() {\r\n      var sum = 0;\r\n      var row = this.list;\r\n      for (var i = 0; i < row.length; i++) {\r\n        var p = row[i];\r\n        if (p.cb) {\r\n          sum += p.price * p.count;\r\n        }\r\n      }\r\n      return sum;\r\n    },\r\n    //点击-按钮，购物商品减1\r\n    minCount(index) {\r\n      if (this.list[index].count == 1) {\r\n        return;\r\n      }\r\n      this.list[index].count--;\r\n    },\r\n    //点击+按钮，购物商品加1\r\n    addCount(index) {\r\n      this.list[index].count++;\r\n    },\r\n    //跳转到商品组件\r\n    jump() {\r\n      this.$router.push(\"GoodsList\");\r\n    },\r\n    //跳转到购物车\r\n    jumpCart(){\r\n      this.$router.push('OrderConfirm')\r\n    }\r\n  },\r\n  created() {\r\n    this.loadMore();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src\\components\\GoodList"}]}