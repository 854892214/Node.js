{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\src\\components\\GoodList\\ShopCart.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\src\\components\\GoodList\\ShopCart.vue","mtime":1561798950720},{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\Administrator\\Desktop\\SSS\\vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.del-btn{\r\n    float: right;\r\n}\r\n",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4PA;AACA;AACA","file":"ShopCart.vue","sourceRoot":"src\\components\\GoodList","sourcesContent":["<template>\r\n<div class=\"app-cart\">\r\n    <div class=\"mui-card\" v-if=\"$store.getters.userId&&list.length>0\">\r\n        <div class=\"mui-card-header\">\r\n            <h3>购物车列表</h3>\r\n            <h4>\r\n                <!--allcb 全选状态true选中false清空-->\r\n                全选\r\n                <input type=\"checkbox\" @click=\"selectAll\" :checked=\"allcb\">\r\n            </h4>\r\n        </div>\r\n        <div class=\"mui-card-content\">\r\n            <div class=\"mui-card-content-inner\">\r\n                <ul class=\"mui-table-view\">\r\n                    <li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) in list\" :key=\"item.id\">\r\n                        <a href=\"javascript:;\">\r\n                            <img class=\"mui-media-object mui-pull-left\">\r\n                            <div class=\"mui-media-body\">\r\n                                <p class=\"mui-ellipsis\">\r\n                                    <!-- 购物车中商品项目 home/ShopCart.vue start-->\r\n                                    <input type=\"checkbox\" :checked=\"item.cb\" :data-i=\"i\" @click=\"modifyItem\">\r\n                                    {{item.lname}}\r\n                                    {{item.price}}\r\n                                    <!--delItem处理删除商品函数-->\r\n                                    <!--data-id 当前购物车id-->\r\n                                    <!--data-idx 当前商品下标list-->\r\n                                    <button class=\"del-btn\" @click=\"delItem\" :data-id=\"item.id\" :data-idx=\"i\">删除</button>\r\n                                    <!-- 购物车中商品项目 end-->\r\n                                </p>\r\n                            </div>\r\n                        </a>\r\n                        <form class=\"mui-input-group\">\r\n                            <div class=\"mui-input-row\">\r\n                                <div class=\"mui-numbox\">\r\n                                    <button class=\"mui-btn mui-btn-numbox-minus\" type=\"button\" @click=\"minCount(i)\">-</button>\r\n                                    <input class=\"mui-input-numbox\" type=\"number\" v-model=\"item.count\">\r\n                                    <button class=\"mui-btn mui-btn-numbox-plus\" type=\"button\" @click=\"addCount(i)\">+</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"mui-card-footer\">\r\n            <button @click=\"removeItem\">删除选中商品</button>\r\n            <p>小计:￥{{calcTocalPrice()}}</p>\r\n        </div>\r\n        <div class=\"mui-card-footer\">\r\n            <button @click=\"jumpCart\">去支付</button>\r\n        </div>\r\n    </div>\r\n    <div v-if=\"isId==false\">\r\n        <p>抱歉，请您先登录吧</p>\r\n    </div>\r\n    <div v-if=\"list.length==0\">\r\n        <h3>购物车是空的，逛逛去吧！</h3>\r\n        <button @click=\"jump\">逛逛</button>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n//ShopCart.vue 当组件创建成功发送 ajax请求\r\n//获取购物车列表\r\nimport {\r\n    Toast\r\n} from \"mint-ui\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            list: [], //页面初始化数组\r\n            cb: false, //保存单个商品的复选框状态\r\n            allcb: false, //保存全选复选框状态\r\n            isId: false //判断用户是否登录\r\n        };\r\n    },\r\n    methods: {\r\n        //删除一项商品\r\n        delItem(e) {\r\n            //e事件对象 e.target 触发事件对象button\r\n            //target.dataset 自定义属性集合\r\n            //1:获取当前购物车id\r\n            var id = e.target.dataset.id;\r\n            var idx = e.target.dataset.idx; //下标\r\n            //2:发送ajax请求\r\n            var url = \"http://127.0.0.1:3000/\";\r\n            url += \"delCartItem?id=\" + id;\r\n            this.axios.get(url).then(result => {\r\n                if (result.data.code == 1) {\r\n                    //3:获取返回结果判断是否删除成功\r\n                    Toast(\"删除成功\");\r\n                    //4:删除list对应购物车商品对象\r\n                    //将数组中对应下标商品删除\r\n                    //splice(数组下标,个数); 10:35\r\n                    this.list.splice(idx, 1);\r\n                }\r\n            });\r\n        },\r\n        //页面加载 初始化数据\r\n        loadMore() {\r\n            //1:创建变量保存url\r\n            var url = \"http://127.0.0.1:3000/\";\r\n            url += \"cartlist?uid=1\";\r\n            //2:发送ajax请求\r\n            this.axios.get(url).then(result => {\r\n                //1:判断如果没有登录显示出错消息\r\n                if (result.data.code == -1) {\r\n                    Toast(\"请登录\");\r\n                    this.isId = false;\r\n                    return;\r\n                }\r\n                this.isId=true\r\n                //1:2 没有与 vue data双向绑定\r\n                //1:接收服务器程序返回数据\r\n                //ShopCart.vue\r\n                var rows = result.data.data;\r\n                //修改全局购物车数量\r\n                this.$store.commit(\"updateCount\", rows.length);\r\n                //2:为每一个商品对象添加属性cb 选中状态\r\n                for (var item of rows) {\r\n                    item.cb = false;\r\n                }\r\n                //3:将最终数组赋值 list 列表\r\n                this.list = rows;\r\n            });\r\n        },\r\n        //点击全选 选中全部商品\r\n        selectAll(e) {\r\n            //全选按钮点击事件\r\n            //1:获取当前全选复选框状态\r\n            var cb = e.target.checked;\r\n            //2:修改全选状态\r\n            this.allcb = cb;\r\n            //2:依据全选状态修改数组中cb值\r\n            for (var item of this.list) {\r\n                item.cb = cb;\r\n            }\r\n        },\r\n        //全选checked判断是否true/false\r\n        modifyItem(e) {\r\n            //修改\r\n            //1:获取当前元素下标[其中一种方式]\r\n            var idx = e.target.dataset.i;\r\n            //2:将下标对象数组中元素cb修改当前复选状态\r\n            var checked = e.target.checked;\r\n            //3:将数组中对应cb状态修改\r\n            this.list[idx].cb = checked;\r\n            //4:统计购物车中商品选中数量 == list.length\r\n            //5:将全选状态修改为true否则为 false\r\n            var count = 0;\r\n            for (var item of this.list) {\r\n                if (item.cb) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count == this.list.length) {\r\n                this.allcb = true;\r\n            } else {\r\n                this.allcb = false;\r\n            }\r\n        },\r\n        //删除选中的购物车商品\r\n        removeItem() {\r\n            //0:创建空字符串，为了后续接拼字符串\r\n            var html = \"\";\r\n            //1:遍历数组中元素\r\n            for (var item of this.list) {\r\n                //2:判断cb==true\r\n                if (item.cb) {\r\n                    //3:保存id：拼字符串\r\n                    html += item.id + \",\";\r\n                }\r\n            }\r\n            //3.1:截取字符串  试一下  三 二 一\r\n            html = html.substring(0, html.length - 1);\r\n            //4:发送ajax请求 删除多个商品\r\n            var url = \"http://127.0.0.1:3000/\";\r\n            url += \"removeMItem?ids=\" + html;\r\n            this.axios.get(url).then(result => {\r\n                if (result.data.code == 1) {\r\n                    Toast(\"删除成功\");\r\n                    this.loadMore();\r\n                }\r\n            });\r\n        },\r\n        // 指定一个方法 计算合计消费的金额\r\n        calcTocalPrice() {\r\n            var sum = 0;\r\n            var row = this.list;\r\n            for (var i = 0; i < row.length; i++) {\r\n                var p = row[i];\r\n                if (p.cb) {\r\n                    sum += p.price * p.count;\r\n                }\r\n            }\r\n            return sum;\r\n        },\r\n        //点击-按钮，购物商品减1\r\n        minCount(index) {\r\n            if (this.list[index].count == 1) {\r\n                return;\r\n            }\r\n            this.list[index].count--;\r\n        },\r\n        //点击+按钮，购物商品加1\r\n        addCount(index) {\r\n            this.list[index].count++;\r\n        },\r\n        //跳转到商品组件\r\n        jump() {\r\n            this.$router.push(\"GoodsList\");\r\n        },\r\n        //跳转到购物车\r\n        jumpCart() {\r\n            this.$router.push('OrderConfirm')\r\n        },\r\n        updateCart() {\r\n            // let postData = qs.stringify({a:this.list},{ arrayFormat: 'indices' })\r\n            // let url = \"http://127.0.0.1:3000/\"\r\n            // url += \"userCart?uid=\" + this.$store.getters.userId\r\n            // this.axios.post(url, postData,{\r\n            //   'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'\r\n            // }).then(result => {\r\n            //     console.log(result)\r\n            // })\r\n            let pid=[];\r\n            let count=[];\r\n            for(let i=0;i<this.list.length;i++){\r\n                pid.push(this.list[i].pid);\r\n                count.push(this.list[i].count)\r\n            }\r\n            let postData=this.qs.stringify({\r\n                    pid,\r\n                    count,\r\n            },{ indices: false })\r\n            let url=\"http://127.0.0.1:3000/updateCart?uid=\"+this.$store.getters.userId\r\n            this.axios.post(url,postData).then(result=>{\r\n                console.log(result)\r\n            })\r\n        }\r\n    },\r\n    created() {\r\n        this.loadMore();\r\n    },\r\n    destroyed: function () {\r\n        this.updateCart()\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n.del-btn{\r\n    float: right;\r\n}\r\n</style>\r\n"]}]}